{"version":3,"sources":["Tools.js"],"names":["native","require","Tools","loadLocalSpriteFrame","refPath","sprite","errorCallback","completeCallback","console","log","cc","loader","loadRes","SpriteFrame","err","res","spriteFrame","loadRemoteImage","url","undefined","load","img","JSON","stringify","sf","retain","loadResDir","dirPath","callback","onResourceLoaded","errorMessage","spriteFrames","urlList","ret","index","length","element","nameList","split","randomSeed","random","callJavaStaticMethod","classFullPackageName","methodName","signature","replace","jsb","reflection","callStaticMethod","callJavaStaticMethod1","arg1","callJavaStaticMethod2","arg2","callJavaStaticMethod3","arg3","callObjCStaticMethod","className","functionFullNameWithArguments","callObjCStaticMethod1","callObjCStaticMethod2","callObjCStaticMethod3","isNative","sys","isBrowser","isMobile","isIOS","os","toLowerCase","isAndroid","isWindows","getLocalData","key","obj","parse","localStorage","getItem","setLocalData","str","setItem","removeLocalData","removeItem","showMessage","msg","android","PACKAGE_PATH","methods","SHOW_TOAST","alert","showMessageDialog","title","SHOW_DIALOG","module","exports"],"mappings":"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","file":"Tools.js","sourceRoot":"../../../../../../assets/resources/Script/global","sourcesContent":["var native = require(\"NativeInterface\");\r\n\r\n/**\r\n * 工具合集\r\n */\r\nvar Tools = {\r\n    /**\r\n     * 加载本地精灵帧\r\n     * @param {string} refPath 本地资源引用路径\r\n     * @param {cc.Sprite} sprite 精灵对象\r\n     * @param {function} errorCallback 失败回调\r\n     * @param {function} completeCallback 完成回调\r\n     */\r\n    loadLocalSpriteFrame: function(refPath, sprite, errorCallback = null, completeCallback = null) {\r\n        console.log(\"尝试加载SpriteFrame:\", refPath);\r\n        cc.loader.loadRes(refPath, cc.SpriteFrame, function(err, res) {\r\n            if (err) {\r\n                console.log(\"加载\", refPath, \"失败！\", err);\r\n                if (errorCallback && typeof(errorCallback) == \"function\") {\r\n                    errorCallback();\r\n                }\r\n                return;\r\n            }\r\n            sprite.spriteFrame = res;\r\n            console.log(\"加载SpriteFrame:\", refPath, \"成功\");\r\n            if (completeCallback && typeof(completeCallback) == \"function\") {\r\n                completeCallback();\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 加载网络图像\r\n     * @param {string} url 图像URL\r\n     * @param {cc.Sprite} sprite 精灵对象\r\n     * @param {function} errorCallback 失败回调\r\n     * @param {function} completeCallback 完成回调\r\n     */\r\n    loadRemoteImage: function(url, sprite, completeCallback = null, errorCallback = null) {\r\n        console.log(\"尝试加载图像: \", url);\r\n        if (url != null && url != undefined && url != \"\") {\r\n            cc.loader.load(url, function(err, img) {\r\n                if (err) {\r\n                    console.log(\"图像\", url, \"加载失败\");\r\n                    console.log(JSON.stringify(err));\r\n                    if (errorCallback && typeof(errorCallback) == \"function\") {\r\n                        errorCallback();\r\n                    }\r\n                } else {\r\n                    console.log(\"图像\", url, \"加载成功\");\r\n                    var sf = new cc.SpriteFrame(img);\r\n                    try {\r\n                        sf.retain()\r\n                    } catch (err) {};\r\n                    sprite.spriteFrame = sf;\r\n                    if (completeCallback && typeof(completeCallback) == \"function\") {\r\n                        completeCallback();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 加载文件夹资源，按key 获取单个图片\r\n     * @param {string} dirPath 路径列表\r\n     * @param {function} callback 回调, 传 图片列表 map\r\n     */\r\n    loadResDir: function(dirPath, callback) {\r\n        var onResourceLoaded = function(errorMessage, spriteFrames, urlList) {\r\n            //检查失败原因\r\n            if (errorMessage) {\r\n                cc.log('Tools.loadResDir：加载失败, 原因:' + errorMessage);\r\n                return;\r\n            }\r\n\r\n            var ret = {};\r\n            for (let index = 0; index < urlList.length; index++) {\r\n                const element = urlList[index];\r\n                var nameList = element.split(\"/\");\r\n                ret[nameList[nameList.length - 1]] = spriteFrames[index];\r\n            }\r\n            if (callback && typeof(callback) == \"function\") {\r\n                callback(ret);\r\n            }\r\n        };\r\n        //這邊才是真的使用cc.loader進行載入，並且呼叫我們上面寫的方法\r\n        cc.loader.loadResDir(dirPath, cc.SpriteFrame, onResourceLoaded);\r\n    },\r\n\r\n    /**\r\n     * 随机种子\r\n     */\r\n    randomSeed: 0,\r\n\r\n    /**\r\n     * 生成一个0-1之间的随机数\r\n     */\r\n    random: function() {\r\n        Tools.randomSeed = (Tools.randomSeed * 1103515245 + 12345) & 0x7fffffff;\r\n        return Tools.randomSeed / 0x7fffffff;\r\n    },\r\n\r\n    /*\r\n     * [[仅限安卓平台]]\r\n     * \r\n     * 此处为下方调用java端静态方法函数中签名(signature)的格式说明\r\n     * \r\n     * 签名形式为（不包含方括号）：\r\n     * ([参数1类型][参数2类型][参数3类型]...)[返回类型]\r\n     * \r\n     * 类型对应表（区分大小写）：\r\n     * void:    V\r\n     * int:     I\r\n     * float:   F\r\n     * boolean: Z\r\n     * String:  Ljava/lang/String;\r\n     * \r\n     * 签名示例：\r\n     * java方法：void foo();\r\n     * 对应签名：()V\r\n     * java方法：int add(int a, int b);\r\n     * 对应签名：(II)I\r\n     * java方法：boolean isEqual(String a, String b);\r\n     * 对应签名：(Ljava/lang/String;LJava/lang/String;)Z\r\n     * \r\n     * 完整示例:\r\n     * 设java端代码为：\r\n     * package org.cocos2dx.javascript;\r\n     * class MyClass\r\n     * {\r\n     *     public static boolean combineString(String a, String b, int length) {...}\r\n     * }\r\n     * \r\n     * js端调用方法为：\r\n     * callJavaStaticMethod3(\"org/cocos2dx/javascript/MyClass\", \"combineString\", \"(Ljava/lang/String;Ljava/lang/String;I)Z\", a, b, length);\r\n     * 其中a, b, length为js端对应参数的变量\r\n     */\r\n\r\n    /**\r\n     * 调用java端静态方法\r\n     * @param {string} classFullPackageName 包含包名的完整类名，用\"/\"分隔\r\n     * @param {string} methodName 方法名称\r\n     * @param {string} signature 签名\r\n     */\r\n    callJavaStaticMethod: function(classFullPackageName, methodName, signature) {\r\n        console.log(\"Calling java native method: \" + classFullPackageName.replace(/\\//g, \".\") + \".\" + methodName, \"signature:\", signature);\r\n        return jsb.reflection.callStaticMethod(classFullPackageName, methodName, signature);\r\n    },\r\n\r\n    /**\r\n     * 调用java端静态方法\r\n     * @param {string} classFullPackageName 包含包名的完整类名，用\"/\"分隔\r\n     * @param {string} methodName 方法名称\r\n     * @param {string} signature 签名\r\n     * @param {*} arg1 参数1\r\n     */\r\n    callJavaStaticMethod1: function(classFullPackageName, methodName, signature, arg1) {\r\n        console.log(\"Calling java native method: \" + classFullPackageName.replace(/\\//g, \".\") + \".\" + methodName, \"signature:\", signature);\r\n        console.log(\"Argument 1: \", arg1);\r\n        return jsb.reflection.callStaticMethod(classFullPackageName, methodName, signature, arg1);\r\n    },\r\n\r\n    /**\r\n     * 调用java端静态方法\r\n     * @param {string} classFullPackageName 包含包名的完整类名，用\"/\"分隔\r\n     * @param {string} methodName 方法名称\r\n     * @param {string} signature 签名\r\n     * @param {*} arg1 参数1\r\n     * @param {*} arg2 参数2\r\n     */\r\n    callJavaStaticMethod2: function(classFullPackageName, methodName, signature, arg1, arg2) {\r\n        console.log(\"Calling java native method: \" + classFullPackageName.replace(/\\//g, \".\") + \".\" + methodName, \"signature:\", signature);\r\n        console.log(\"Argument 1: \", arg1);\r\n        console.log(\"Argument 2: \", arg2);\r\n        return jsb.reflection.callStaticMethod(classFullPackageName, methodName, signature, arg1, arg2);\r\n    },\r\n\r\n    /**\r\n     * 调用java端静态方法\r\n     * @param {string} classFullPackageName 包含包名的完整类名，用\"/\"分隔\r\n     * @param {string} methodName 方法名称\r\n     * @param {string} signature 签名\r\n     * @param {*} arg1 参数1\r\n     * @param {*} arg2 参数2\r\n     * @param {*} arg3 参数3\r\n     */\r\n    callJavaStaticMethod3: function(classFullPackageName, methodName, signature, arg1, arg2, arg3) {\r\n        console.log(\"Calling java native method: \" + classFullPackageName.replace(/\\//g, \".\") + \".\" + methodName, \"signature:\", signature);\r\n        console.log(\"Argument 1: \", arg1);\r\n        console.log(\"Argument 2: \", arg2);\r\n        console.log(\"Argument 3: \", arg3);\r\n        return jsb.reflection.callStaticMethod(classFullPackageName, methodName, signature, arg1, arg2, arg3);\r\n    },\r\n\r\n    /**\r\n     * 调用Obj-C端静态方法\r\n     * @param {string} clasName 类名，不包含路径\r\n     * @param {string} functionFullNameWithArguments 包含参数定义的完整方法名（参数间用\":\"分隔）\r\n     */\r\n    callObjCStaticMethod: function(className, functionFullNameWithArguments) {\r\n        console.log(\"Calling Obj-C native method:\", className, functionFullNameWithArguments);\r\n        return jsb.reflection.callStaticMethod(className, functionFullNameWithArguments);\r\n    },\r\n\r\n    /**\r\n     * 调用Obj-C端静态方法\r\n     * @param {string} clasName 类名，不包含路径\r\n     * @param {string} functionFullNameWithArguments 包含参数定义的完整方法名（参数间用\":\"分隔）\r\n     * @param {*} arg1 参数1\r\n     */\r\n    callObjCStaticMethod1: function(className, functionFullNameWithArguments, arg1) {\r\n        console.log(\"Calling Obj-C native method:\", className, functionFullNameWithArguments);\r\n        console.log(\"Argument 1: \", arg1);\r\n        return jsb.reflection.callStaticMethod(className, functionFullNameWithArguments, arg1);\r\n    },\r\n\r\n    /**\r\n     * 调用Obj-C端静态方法\r\n     * @param {string} clasName 类名，不包含路径\r\n     * @param {string} functionFullNameWithArguments 包含参数定义的完整方法名（参数间用\":\"分隔）\r\n     * @param {*} arg1 参数1\r\n     * @param {*} arg2 参数2\r\n     */\r\n    callObjCStaticMethod2: function(className, functionFullNameWithArguments, arg1, arg2) {\r\n        console.log(\"Calling Obj-C native method:\", className, functionFullNameWithArguments);\r\n        console.log(\"Argument 1: \", arg1);\r\n        console.log(\"Argument 2: \", arg2);\r\n        return jsb.reflection.callStaticMethod(className, functionFullNameWithArguments, arg1, arg2);\r\n    },\r\n\r\n    /**\r\n     * 调用Obj-C端静态方法\r\n     * @param {string} clasName 类名，不包含路径\r\n     * @param {string} functionFullNameWithArguments 包含参数定义的完整方法名（参数间用\":\"分隔）\r\n     * @param {*} arg1 参数1\r\n     * @param {*} arg2 参数2\r\n     * @param {*} arg3 参数3\r\n     */\r\n    callObjCStaticMethod3: function(className, functionFullNameWithArguments, arg1, arg2, arg3) {\r\n        console.log(\"Calling Obj-C native method:\", className, functionFullNameWithArguments);\r\n        console.log(\"Argument 1: \", arg1);\r\n        console.log(\"Argument 2: \", arg2);\r\n        console.log(\"Argument 3: \", arg3);\r\n        return jsb.reflection.callStaticMethod(className, functionFullNameWithArguments, arg1, arg2, arg3);\r\n    },\r\n\r\n    /**\r\n     * 判断当前运行环境是否为原生环境\r\n     */\r\n    isNative: function() {\r\n        console.log(\"isNative: \", cc.sys.isNative);\r\n        return cc.sys.isNative;\r\n    },\r\n\r\n    /**\r\n     * 判断当前运行环境是否为浏览器\r\n     */\r\n    isBrowser: function() {\r\n        console.log(\"isBrowser: \", cc.sys.isBrowser);\r\n        return cc.sys.isBrowser;\r\n    },\r\n\r\n    /**\r\n     * 判断当前设备是否为移动设备\r\n     */\r\n    isMobile: function() {\r\n        console.log(\"isMobile: \", cc.sys.isMobile);\r\n        return cc.sys.isMobile;\r\n    },\r\n\r\n    /**\r\n     * 判断当前环境是否为iOS\r\n     */\r\n    isIOS: function() {\r\n        console.log(\"os: \", cc.sys.os);\r\n        return cc.sys.os.toLowerCase() == \"ios\";\r\n    },\r\n\r\n    /**\r\n     * 判断当前设备是否为安卓\r\n     */\r\n    isAndroid: function() {\r\n        console.log(\"os: \", cc.sys.os);\r\n        return cc.sys.os.toLowerCase() == \"android\";\r\n    },\r\n\r\n    /**\r\n     * 判断当前环境是否为Windows\r\n     */\r\n    isWindows: function() {\r\n        console.log(\"os: \", cc.sys.os);\r\n        return cc.sys.os.toLowerCase() == \"windows\";\r\n    },\r\n\r\n    /**\r\n     * 获取本地数据\r\n     * @param {string} key 键\r\n     * @return {json} 值\r\n     */\r\n    getLocalData: function(key) {\r\n        try {\r\n            var obj = JSON.parse(cc.sys.localStorage.getItem(key));\r\n            try {\r\n                console.log(\"getLocalData:\", JSON.stringify(obj));\r\n            } catch (err) {}\r\n            return obj;\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 存储本地数据\r\n     * @param {string} key 键\r\n     * @param {*} obj 对象\r\n     */\r\n    setLocalData: function(key, obj) {\r\n        var str = JSON.stringify(obj);\r\n        console.log(\"setLocalData:\", str);\r\n        cc.sys.localStorage.setItem(key, str);\r\n    },\r\n\r\n    /**\r\n     * 移除本地数据\r\n     * @param {string} key 键\r\n     */\r\n    removeLocalData: function(key, obj) {\r\n        cc.sys.localStorage.removeItem(key);\r\n    },\r\n\r\n    /**\r\n     * 显示弹出消息\r\n     * @param {string} msg 消息\r\n     */\r\n    showMessage: function(msg) {\r\n        console.log(\"showMessage:\", msg);\r\n        if (this.isAndroid()) {\r\n            this.callJavaStaticMethod1(native.android.PACKAGE_PATH, native.android.methods.SHOW_TOAST, \"(Ljava/lang/String;)V\", msg);\r\n        } else if (this.isIOS()) {\r\n            // 调用OC原生方法\r\n        } else if (this.isBrowser()) {\r\n            alert(msg);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 显示弹出消息对话框\r\n     * @param {string} title 标题\r\n     * @param {string} msg 消息\r\n     */\r\n    showMessageDialog: function(title, msg) {\r\n        console.log(\"showMessageDialog:\", title, msg);\r\n        if (this.isAndroid()) {\r\n            this.callJavaStaticMethod2(native.android.PACKAGE_PATH, native.android.methods.SHOW_DIALOG, \"(Ljava/lang/String;Ljava/lang/String;)V\", title, msg);\r\n        } else if (this.isIOS()) {\r\n            // 调用OC原生方法\r\n        } else if (this.isBrowser()) {\r\n            alert(msg);\r\n        }\r\n    },\r\n};\r\n\r\nmodule.exports = Tools;"]}