{"version":3,"sources":["HttpConnect.js"],"names":["onfire","require","serverConfig","httpRequestDefine","pbhelper","HttpConnect","sendProtoRequest","protoName","sendData","$this","url","httpHost","protoInfo","console","error","info","buffer","encodeObject","xmlHttp","createXMLHttpRequest","getStatusBack","response","responseType","readyState","buf","str2bytes","responseData","decodeBuffer","responseProto","fire","open","onreadystatechange","setRequestHeader","send","window","XMLHttpRequest","ActiveXObject","e","str","bytes","i","len","length","c","charCodeAt","byte","push","module","exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,SAASC,QAAQ,QAAR,CAAb,EAA0C;AAC1C,IAAIC,eAAeD,QAAQ,cAAR,CAAnB;AACA,IAAIE,oBAAoBF,QAAQ,mBAAR,CAAxB;AACA,IAAIG,WAAWH,QAAQ,WAAR,CAAf;;AAEA,IAAII,cAAc;AACdC,sBAAkB,0BAAUC,SAAV,EAAqBC,QAArB,EAClB;AACI,YAAIC,QAAQ,IAAZ;AACA,YAAIC,MAAMR,aAAaS,QAAvB;AACA,YAAIC,YAAYT,kBAAkBI,SAAlB,CAAhB;AACA,YAAIK,aAAa,IAAjB,EACA;AACIC,oBAAQC,KAAR,CAAc,yEAAd;AACA;AACH;AACDJ,cAAMA,MAAME,UAAUF,GAAtB;AACAG,gBAAQE,IAAR,CAAa,OAAb,EAAsBL,GAAtB;AACA,YAAIM,SAASZ,SAASa,YAAT,CAAsBV,SAAtB,EAAiCC,QAAjC,CAAb;AACA,YAAIU,UAAU,KAAKC,oBAAL,EAAd;AACA,iBAASC,aAAT,GACA;AACIP,oBAAQE,IAAR,CAAa,wBAAb,EAAuCG,OAAvC;AACA,gBAAIG,WAAWH,QAAQG,QAAvB;AACAR,oBAAQE,IAAR,CAAa,8BAAb,EAA6CG,QAAQI,YAArD;AACA,gBAAIJ,QAAQK,UAAR,IAAsB,CAAtB,IAA2BF,QAA/B,EACA;AACI;AACAR,wBAAQE,IAAR,CAAa,YAAb,EAA2BM,QAA3B;AACA,oBAAIG,MAAMf,MAAMgB,SAAN,CAAgBJ,QAAhB,CAAV;AACA,oBAAIK,eAAetB,SAASuB,YAAT,CAAsBf,UAAUgB,aAAhC,EAA+CJ,GAA/C,CAAnB;AACAX,wBAAQE,IAAR,CAAa,6BAAb,EAA4CW,YAA5C;AACA1B,uBAAO6B,IAAP,CAAYjB,UAAUgB,aAAtB,EAAqCF,YAArC;AACH;AACJ;AACDR,gBAAQY,IAAR,CAAa,MAAb,EAAqBpB,GAArB,EAA0B,IAA1B;AACAQ,gBAAQa,kBAAR,GAA6BX,aAA7B;AACA;AACA;AACAF,gBAAQc,gBAAR,CAAyB,6BAAzB,EAAwD,GAAxD;AACA;AACA;AACA;AACAd,gBAAQe,IAAR,CAAajB,MAAb;AACH,KAvCa;AAwCdG,0BAAsB,gCACtB;AACI,YAAID,OAAJ;AACA,YAAIgB,OAAOC,cAAX,EACA;AACIjB,sBAAU,IAAIiB,cAAJ,EAAV;AACH,SAHD,MAGO,IAAID,OAAOE,aAAX,EACP;AACI,gBACA;AACIlB,0BAAU,IAAIkB,aAAJ,CAAkB,gBAAlB,CAAV;AACH,aAHD,CAGE,OAAOC,CAAP,EACF;AACI,oBACA;AACInB,8BAAU,IAAIkB,aAAJ,CAAkB,mBAAlB,CAAV;AACH,iBAHD,CAGE,OAAOC,CAAP,EACF,CACC;AACJ;AACJ;AACD,eAAOnB,OAAP;AACH,KA9Da;AA+DdO,eAAW,mBAAUa,GAAV,EACX;AACI,YAAIC,QAAQ,EAAZ;AACA,aAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMH,IAAII,MAA1B,EAAkCF,IAAIC,GAAtC,EAA2C,EAAED,CAA7C,EACA;AACI,gBAAIG,IAAIL,IAAIM,UAAJ,CAAeJ,CAAf,CAAR;AACA,gBAAIK,OAAOF,IAAI,IAAf;AACAJ,kBAAMO,IAAN,CAAWD,IAAX;AACH;AACD,eAAON,KAAP;AACH;AAzEa,CAAlB;;AA4EAQ,OAAOC,OAAP,GAAiB3C,WAAjB","file":"HttpConnect.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\resources\\Script\\network","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nvar onfire = require(\"onfire\");           //处理事件的类库\r\nvar serverConfig = require('ServerConfig');\r\nvar httpRequestDefine = require('HttpRequestDefine');\r\nvar pbhelper = require(\"ProtoTest\");\r\n\r\nvar HttpConnect = {\r\n    sendProtoRequest: function (protoName, sendData)\r\n    {\r\n        var $this = this;\r\n        var url = serverConfig.httpHost;\r\n        var protoInfo = httpRequestDefine[protoName];\r\n        if (protoInfo == null)\r\n        {\r\n            console.error('sendProtoRequest failed, please check proto define in HttpRequestDefine');\r\n            return;\r\n        }\r\n        url = url + protoInfo.url;\r\n        console.info(\"url: \", url);\r\n        var buffer = pbhelper.encodeObject(protoName, sendData);\r\n        var xmlHttp = this.createXMLHttpRequest();\r\n        function getStatusBack()\r\n        {\r\n            console.info('getStatusBack xmlHttp:', xmlHttp);\r\n            var response = xmlHttp.response;\r\n            console.info('getStatusBack response type:', xmlHttp.responseType);\r\n            if (xmlHttp.readyState == 4 && response)\r\n            {\r\n                // JSB doesn't support Blob or FileReader so we use plain function to get byte[]\r\n                console.info(\"response: \", response);\r\n                var buf = $this.str2bytes(response);\r\n                var responseData = pbhelper.decodeBuffer(protoInfo.responseProto, buf);\r\n                console.info('getStatusBack responseData:', responseData);\r\n                onfire.fire(protoInfo.responseProto, responseData);\r\n            }\r\n        };\r\n        xmlHttp.open(\"POST\", url, true);\r\n        xmlHttp.onreadystatechange = getStatusBack;\r\n        //xmlHttp.withCredentials = true;\r\n        //xmlHttp.setRequestHeader(\"Content-Type\", \"application/x-protobuf\");\r\n        xmlHttp.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        //xmlHttp.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET, PUT, POST, DELETE, OPTIONS\");\r\n        //xmlHttp.setRequestHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Content-Range, Content-Disposition, Content-Description\");\r\n        //xmlHttp.setRequestHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n        xmlHttp.send(buffer);\r\n    },\r\n    createXMLHttpRequest: function ()\r\n    {\r\n        var xmlHttp;\r\n        if (window.XMLHttpRequest)\r\n        {\r\n            xmlHttp = new XMLHttpRequest();\r\n        } else if (window.ActiveXObject)\r\n        {\r\n            try\r\n            {\r\n                xmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n            } catch (e)\r\n            {\r\n                try\r\n                {\r\n                    xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n                } catch (e)\r\n                {\r\n                }\r\n            }\r\n        }\r\n        return xmlHttp;\r\n    },\r\n    str2bytes: function (str)\r\n    {\r\n        var bytes = [];\r\n        for (var i = 0, len = str.length; i < len; ++i)\r\n        {\r\n            var c = str.charCodeAt(i);\r\n            var byte = c & 0xff;\r\n            bytes.push(byte);\r\n        }\r\n        return bytes;\r\n    }\r\n};\r\n\r\nmodule.exports = HttpConnect;\r\n"]}