{"version":3,"sources":["Player.js"],"names":["cartTypeAtlas","sf_cardList","cc","Class","extends","Component","properties","data","spHead","Sprite","spSgin","labelName","Label","labelScore","cardNode","Node","spReady","labelBet","spType","labelWinScore","ctAtlas","SpriteAtlas","isMySelf","cardList","cardPosList","sf_cardBg","SpriteFrame","onLoad","node","active","create","user","name","score","ready","banker","string","setBetNum","Math","max","robBankerBet","bet","index","getChildren","forEach","element","getPosition","setReady","setBanker","sitUp","setScore","nScore","setWinScore","isReady","num","setCardType","pType","spriteFrame","getSpriteFrame","isBanker","sendCardAction","centerNode","cardData","pCallback","console","log","windowSize","view","getVisibleSize","pos","convertToWorldSpace","p","convertToNodeSpace","setPosition","getComponent","_spriteFrames","delay","delayTime","move","moveTo","seq","sequence","$this","cf_openCard","callFunc","open4Card","runAction","sprite","addComponent","addChild","scale1","scaleBy","scale2","cf_setTexture","openLastCard","lastCard","cardType","cf_showResult","setSF","moveTo1","showType","showResultScore","nWinScore","resetPlayer"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\resources\\Script\\view","sourcesContent":["var cartTypeAtlas;\r\nvar sf_cardList;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        data: null,\r\n        spHead: cc.Sprite,         //头像\r\n        spSgin: cc.Sprite,         //右上角标识\r\n        labelName: cc.Label,       //名字\r\n        labelScore: cc.Label,      //分数\r\n        cardNode: cc.Node,         //牌背面\r\n        spReady: cc.Sprite,        //已准备\r\n        labelBet: cc.Label,        //下注倍数\r\n        spType: cc.Sprite,         //牌型\r\n        labelWinScore: cc.Label,   //赢得的分数\r\n        ctAtlas: cc.SpriteAtlas,   //图集 牛牛类型\r\n        isMySelf: null,           //是否是自己\r\n\r\n        cardList: [],                //牌列表\r\n        cardPosList: [],             //牌坐标 列表\r\n\r\n        sf_cardBg: cc.SpriteFrame,\r\n        sf_cardList: cc.SpriteAtlas, //牌资源\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        if (!this.data) {\r\n            this.node.active = false;\r\n            this.spSgin.node.active = false;\r\n        }\r\n        // 只需要设置一次就可以了\r\n        cartTypeAtlas = cartTypeAtlas || this.ctAtlas;\r\n        sf_cardList = sf_cardList || this.sf_cardList;\r\n\r\n    },\r\n\r\n    /**\r\n     * 创建用户\r\n     * @param {*} data \r\n     */\r\n    create(data, isMySelf) {\r\n\r\n        data = data || {\r\n            user: {\r\n                name: \"测试\"\r\n            },\r\n            score: 100,\r\n            ready: false,\r\n            banker: false,\r\n        }\r\n        this.data = data;\r\n        // this.isMySelf = isMySelf;\r\n        this.node.active = true;\r\n        this.labelName.string = data.user.name;\r\n        this.labelScore.string = data.score;\r\n\r\n        this.setBetNum(Math.max(data.robBankerBet, data.bet));\r\n        this.spType.node.active = false;\r\n        this.cardNode.active = false;\r\n        this.labelWinScore.node.active = false;\r\n\r\n        var index = 0;\r\n        this.cardNode.getChildren().forEach(element => {\r\n            this.cardList[index] = element;\r\n            this.cardPosList[index] = element.getPosition();\r\n            index += 1;\r\n        });\r\n        // 设置准备状态\r\n        this.setReady(data.ready);\r\n        // 设置是否是庄家\r\n        this.setBanker(data.banker);\r\n\r\n    },\r\n\r\n    /**\r\n     * 站起\r\n     */\r\n    sitUp() {\r\n        this.node.active = false;\r\n    },\r\n\r\n    /**\r\n     * 设置分数\r\n     * @param {*} nScore \r\n     */\r\n    setScore(nScore) {\r\n        this.labelScore.string = nScore;\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    setWinScore(nScore){\r\n        this.labelWinScore.node.active = true;\r\n        this.labelWinScore.string = nScore;\r\n    },\r\n\r\n    /**\r\n     * 设置是否显示准备\r\n     * @param {*} isReady \r\n     */\r\n    setReady(isReady) {\r\n        if (this.spReady) {\r\n            this.spReady.node.active = isReady;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 下注倍数\r\n     * @param {*} num \r\n     */\r\n    setBetNum(num) {\r\n        this.labelBet.node.active = num > 0;\r\n        this.labelBet.string = \"x\" + num;\r\n\r\n    },\r\n    /**\r\n     * 设置牌型\r\n     * @param {*} pType \r\n     */\r\n    setCardType(pType) {\r\n        this.spType.node.active = true\r\n        this.spType.spriteFrame = cartTypeAtlas.getSpriteFrame(pType);\r\n    },\r\n\r\n    /**\r\n     * 设置是否是庄家\r\n     * @param {*} isBanker \r\n     */\r\n    setBanker(isBanker) {\r\n        // this.spSgin.parent.node.getChildByName(\"border\").node.active = isBanker;\r\n        this.spSgin.node.active = isBanker;\r\n    },\r\n\r\n    /**\r\n     * 发牌动画\r\n     */\r\n    sendCardAction(centerNode, cardData, pCallback) {\r\n        console.log(\"--- 发牌动画！\");\r\n\r\n        let windowSize = cc.view.getVisibleSize();\r\n        var pos = centerNode.convertToWorldSpace(cc.p(0, 0))\r\n        pos = this.cardNode.convertToNodeSpace(pos);\r\n\r\n        this.cardNode.active = true;\r\n\r\n        for (let index = 0; index < 5; index++) {\r\n\r\n            this.cardList[index].setPosition(pos);\r\n            this.cardList[index].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames['back_2'];\r\n\r\n            var delay = cc.delayTime(index * 0.05);\r\n            var move = cc.moveTo(0.2, this.cardPosList[index]);\r\n            var seq = cc.sequence(delay, move);\r\n\r\n            if (index == 4 && this.isMySelf) {\r\n                var $this = this;\r\n                var cf_openCard = cc.callFunc(function () {\r\n                    $this.open4Card(cardData);\r\n                })\r\n                seq = cc.sequence(delay, move, cf_openCard);\r\n            }\r\n            this.cardList[index].runAction(seq);\r\n        }\r\n\r\n        var node = new cc.Node('myNode')\r\n        const sprite = node.addComponent(cc.Sprite)\r\n        sprite.spriteFrame = this.sf_cardBg;\r\n        node.setPosition(pos);\r\n        this.cardNode.addChild(node)\r\n\r\n\r\n        if (pCallback) {\r\n            pCallback()\r\n        };\r\n    },\r\n\r\n    /**\r\n     * 打开四张牌\r\n     * @param {*} cardData \r\n     */\r\n    open4Card(cardData) {\r\n        var $this = this;\r\n        for (let index = 0; index < 4; index++) {\r\n            var scale1 = cc.scaleBy(0.5, 0.1, 1);\r\n            var scale2 = cc.scaleBy(0.5, 10, 1);\r\n            var cf_setTexture = cc.callFunc(function () {\r\n                if (sf_cardList) {\r\n                    $this.cardList[index].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames[cardData[index]];\r\n                }\r\n\r\n            })\r\n            var seq = cc.sequence(scale1, cf_setTexture, scale2);\r\n\r\n            this.cardList[index].runAction(seq);\r\n        }\r\n\r\n    },\r\n\r\n    // 最后一张牌，开牌\r\n    openLastCard(cardData, lastCard, cardType ,pCallback) {\r\n        var $this = this;\r\n        var cf_showResult = cc.callFunc(function () {\r\n\r\n            for (let index = 0; index < 5; index++) {\r\n                var moveTo = cc.moveTo(0.4, $this.cardPosList[0])\r\n                var setSF = cc.callFunc(function () {\r\n                    $this.cardList[index].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames[cardData[index]];\r\n                });\r\n                \r\n                var moveTo1 = cc.moveTo(0.4, $this.cardPosList[index]);\r\n                var seq = cc.sequence(moveTo, setSF, moveTo1);\r\n                // 最后一张牌\r\n                if(index == 4){\r\n                    var showType = cc.callFunc(function () {\r\n                        $this.setCardType(cardType);\r\n                        if(pCallback){\r\n                            pCallback();\r\n                        }\r\n                    });\r\n                    seq = cc.sequence(moveTo, setSF, moveTo1, showType);\r\n                }\r\n                $this.cardList[index].runAction(seq);\r\n            }\r\n        });\r\n\r\n        // 是自己就翻牌\r\n        if(this.isMySelf){\r\n            var scale1 = cc.scaleBy(0.4, 0.1, 1);\r\n            var scale2 = cc.scaleBy(0.4, 10, 1);\r\n            var delay = cc.delayTime(0.5);\r\n            var cf_setTexture = cc.callFunc(function () {\r\n                if (sf_cardList) {\r\n                    $this.cardList[4].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames[lastCard];\r\n                }\r\n            })\r\n            var seq = cc.sequence(scale1, cf_setTexture, scale2, delay, cf_showResult);\r\n            this.cardList[4].runAction(seq);\r\n        }else{\r\n            this.cardList[4].runAction(cf_showResult);\r\n        }\r\n        \r\n    },\r\n\r\n    /**\r\n     * 设置赢得的分数\r\n     * @param {*} nWinScore \r\n     * @param {*} nScore \r\n     */\r\n    showResultScore(nWinScore,nScore){\r\n        this.setScore(nScore);\r\n        this.setWinScore(nWinScore);\r\n    },\r\n\r\n    /**\r\n     * 重置player\r\n     */\r\n    resetPlayer(){\r\n        this.setBanker(false);\r\n        this.spType.node.active = false;\r\n        this.cardNode.active = false;\r\n        this.labelWinScore.node.active = false;\r\n    }\r\n\r\n\r\n});\r\n"]}