{"version":3,"sources":["../../../../../../assets/resources/Script/view/assets/resources/Script/view/Player.js"],"names":["cartTypeAtlas","cc","Class","extends","Component","properties","data","spHead","Sprite","spSgin","labelName","Label","labelScore","cardNode","Node","spReady","labelBet","spType","labelWinScore","ctAtlas","SpriteAtlas","isMySelf","cardList","cardPosList","sf_cardBg","SpriteFrame","sf_cardList","onLoad","node","active","create","user","name","score","ready","banker","string","index","getChildren","forEach","element","getPosition","setReady","setBanker","sitUp","setScore","nScore","isReady","setCartType","pType","spriteFrame","getSpriteFrame","isBanker","sendCardAction","centerNode","cardData","pCallback","console","log","windowSize","view","getVisibleSize","pos","convertToWorldSpace","p","convertToNodeSpace","setPosition","delay","delayTime","move","moveTo","seq","sequence","$this","cf_openCard","callFunc","open4Card","runAction","sprite","addComponent","addChild","scale1","scaleBy","scale2","cf_setTexture","getComponent","_spriteFrames"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../../../assets/resources/Script/view","sourcesContent":["var cartTypeAtlas;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        data: null,\n        spHead: cc.Sprite,         //头像\n        spSgin: cc.Sprite,         //右上角标识\n        labelName: cc.Label,       //名字\n        labelScore: cc.Label,      //分数\n        cardNode: cc.Node,         //牌背面\n        spReady: cc.Sprite,        //已准备\n        labelBet: cc.Label,        //下注倍数\n        spType: cc.Sprite,         //牌型\n        labelWinScore: cc.Label,   //赢得的分数\n        ctAtlas: cc.SpriteAtlas,   //图集 牛牛类型\n        isMySelf: false,           //是否是自己\n\n        cardList: [],                //牌列表\n        cardPosList: [],             //牌坐标 列表\n\n        sf_cardBg: cc.SpriteFrame,\n        sf_cardList: cc.SpriteAtlas, //牌资源\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if (!this.data) {\n            this.node.active = false;\n            this.spSgin.node.active = false;\n        }\n        // 只需要设置一次就可以了\n        cartTypeAtlas = cartTypeAtlas || this.ctAtlas;\n    },\n\n    /**\n     * 创建用户\n     * @param {*} data \n     */\n    create(data, isMySelf) {\n\n        data = data || {\n            user: {\n                name: \"测试\"\n            },\n            score: 100,\n            ready: false,\n            banker: false,\n        }\n        this.data = data;\n        this.isMySelf = isMySelf;\n        this.node.active = true;\n        this.labelName.string = data.user.name;\n        this.labelScore.string = data.score;\n\n        this.labelBet.node.active = false;\n        this.spType.node.active = false;\n        this.cardNode.active = false;\n        this.labelWinScore.node.active = false;\n\n        var index = 0;\n        this.cardNode.getChildren().forEach(element => {\n            this.cardList[index] = element;\n            this.cardPosList[index] = element.getPosition();\n            index += 1;\n        });\n        // 设置准备状态\n        this.setReady(data.ready);\n        // 设置是否是庄家\n        this.setBanker(data.banker);\n\n    },\n\n    /**\n     * 站起\n     */\n    sitUp() {\n        this.node.active = false;\n    },\n\n    /**\n     * 设置分数\n     * @param {*} nScore \n     */\n    setScore(nScore) {\n        this.labelScore.string = nScore;\n    },\n\n    /**\n     * 设置是否显示准备\n     * @param {*} isReady \n     */\n    setReady(isReady) {\n        if (this.spReady) {\n            this.spReady.node.active = isReady;\n        }\n    },\n\n    /**\n     * 设置牌型\n     * @param {*} pType \n     */\n    setCartType(pType) {\n        this.spType.node.active = true\n        this.spType.spriteFrame = cartTypeAtlas.getSpriteFrame(pType);\n    },\n\n    /**\n     * 设置是否是庄家\n     * @param {*} isBanker \n     */\n    setBanker(isBanker) {\n        // this.spSgin.parent.node.getChildByName(\"border\").node.active = isBanker;\n        this.spSgin.node.active = isBanker;\n    },\n\n    /**\n     * 发牌动画\n     */\n    sendCardAction(centerNode, cardData, pCallback) {\n        console.log(\"--- 发牌动画！\");\n\n        let windowSize = cc.view.getVisibleSize();\n        var pos = centerNode.convertToWorldSpace(cc.p(0, 0))\n        pos = this.cardNode.convertToNodeSpace(pos);\n\n        this.cardNode.active = true;\n\n        for (let index = 0; index < 5; index++) {\n\n            this.cardList[index].setPosition(pos);\n            var delay = cc.delayTime(index * 0.05);\n            var move = cc.moveTo(0.2, this.cardPosList[index]);\n            var seq = cc.sequence(delay, move);\n\n            // if (index == 4 && cardData) {\n            if (index == 4) {\n                var $this = this;\n                var cf_openCard = cc.callFunc(function () {\n                    $this.open4Card(cardData);\n                })\n                seq = cc.sequence(delay, move, cf_openCard);\n            }\n            this.cardList[index].runAction(seq);\n        }\n\n        var node = new cc.Node('myNode')\n        const sprite = node.addComponent(cc.Sprite)\n        sprite.spriteFrame = this.sf_cardBg;\n        node.setPosition(pos);\n        this.cardNode.addChild(node)\n\n\n        if (pCallback) {\n            pCallback()\n        };\n    },\n\n    /**\n     * 打开四张牌\n     * @param {*} cardData \n     */\n    open4Card(cardData) {\n        var $this = this;\n        for (let index = 0; index < 4; index++) {\n            var scale1 = cc.scaleBy(0.5, 0.1, 1);\n            var scale2 = cc.scaleBy(0.5, 10, 1);\n            var cf_setTexture = cc.callFunc(function () {\n                if ($this.sf_cardList) {\n                    $this.cardList[index].getComponent(\"cc.Sprite\").spriteFrame = $this.sf_cardList._spriteFrames[17];\n                }\n\n            })\n            var seq = cc.sequence(scale1, cf_setTexture, scale2);\n\n            this.cardList[index].runAction(seq);\n\n            if (this.sf_cardList) {\n\n            }\n        }\n\n    }\n\n});\n"]}