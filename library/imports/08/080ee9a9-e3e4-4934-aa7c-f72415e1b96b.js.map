{"version":3,"sources":["../../../../../../assets/resources/Script/view/assets/resources/Script/view/Player.js"],"names":["cartTypeAtlas","sf_cardList","cc","Class","extends","Component","properties","data","spHead","Sprite","spSgin","labelName","Label","labelScore","cardNode","Node","spReady","labelBet","spType","labelWinScore","ctAtlas","SpriteAtlas","isMySelf","cardList","cardPosList","sf_cardBg","SpriteFrame","onLoad","node","active","create","user","name","score","ready","banker","string","setBetNum","Math","max","robBankerBet","bet","index","getChildren","forEach","element","getPosition","setReady","setBanker","sitUp","setScore","nScore","isReady","num","setCartType","pType","spriteFrame","getSpriteFrame","isBanker","sendCardAction","centerNode","cardData","pCallback","console","log","windowSize","view","getVisibleSize","pos","convertToWorldSpace","p","convertToNodeSpace","setPosition","getComponent","_spriteFrames","delay","delayTime","move","moveTo","seq","sequence","$this","cf_openCard","callFunc","open4Card","runAction","sprite","addComponent","addChild","scale1","scaleBy","scale2","cf_setTexture","openLastCard","lastCard","cardType","cf_showResult","setSF","moveTo1"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../../../assets/resources/Script/view","sourcesContent":["var cartTypeAtlas;\nvar sf_cardList;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        data: null,\n        spHead: cc.Sprite,         //头像\n        spSgin: cc.Sprite,         //右上角标识\n        labelName: cc.Label,       //名字\n        labelScore: cc.Label,      //分数\n        cardNode: cc.Node,         //牌背面\n        spReady: cc.Sprite,        //已准备\n        labelBet: cc.Label,        //下注倍数\n        spType: cc.Sprite,         //牌型\n        labelWinScore: cc.Label,   //赢得的分数\n        ctAtlas: cc.SpriteAtlas,   //图集 牛牛类型\n        isMySelf: null,           //是否是自己\n\n        cardList: [],                //牌列表\n        cardPosList: [],             //牌坐标 列表\n\n        sf_cardBg: cc.SpriteFrame,\n        sf_cardList: cc.SpriteAtlas, //牌资源\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if (!this.data) {\n            this.node.active = false;\n            this.spSgin.node.active = false;\n        }\n        // 只需要设置一次就可以了\n        cartTypeAtlas = cartTypeAtlas || this.ctAtlas;\n        sf_cardList = sf_cardList || this.sf_cardList;\n\n    },\n\n    /**\n     * 创建用户\n     * @param {*} data \n     */\n    create(data, isMySelf) {\n\n        data = data || {\n            user: {\n                name: \"测试\"\n            },\n            score: 100,\n            ready: false,\n            banker: false,\n        }\n        this.data = data;\n        // this.isMySelf = isMySelf;\n        this.node.active = true;\n        this.labelName.string = data.user.name;\n        this.labelScore.string = data.score;\n\n        this.setBetNum(Math.max(data.robBankerBet, data.bet));\n        this.spType.node.active = false;\n        this.cardNode.active = false;\n        this.labelWinScore.node.active = false;\n\n        var index = 0;\n        this.cardNode.getChildren().forEach(element => {\n            this.cardList[index] = element;\n            this.cardPosList[index] = element.getPosition();\n            index += 1;\n        });\n        // 设置准备状态\n        this.setReady(data.ready);\n        // 设置是否是庄家\n        this.setBanker(data.banker);\n\n    },\n\n    /**\n     * 站起\n     */\n    sitUp() {\n        this.node.active = false;\n    },\n\n    /**\n     * 设置分数\n     * @param {*} nScore \n     */\n    setScore(nScore) {\n        this.labelScore.string = nScore;\n    },\n\n    /**\n     * 设置是否显示准备\n     * @param {*} isReady \n     */\n    setReady(isReady) {\n        if (this.spReady) {\n            this.spReady.node.active = isReady;\n        }\n    },\n\n    /**\n     * 下注倍数\n     * @param {*} num \n     */\n    setBetNum(num) {\n        this.labelBet.node.active = num > 0;\n        this.labelBet.string = \"x\" + num;\n\n    },\n    /**\n     * 设置牌型\n     * @param {*} pType \n     */\n    setCartType(pType) {\n        this.spType.node.active = true\n        this.spType.spriteFrame = cartTypeAtlas.getSpriteFrame(pType);\n    },\n\n    /**\n     * 设置是否是庄家\n     * @param {*} isBanker \n     */\n    setBanker(isBanker) {\n        // this.spSgin.parent.node.getChildByName(\"border\").node.active = isBanker;\n        this.spSgin.node.active = isBanker;\n    },\n\n    /**\n     * 发牌动画\n     */\n    sendCardAction(centerNode, cardData, pCallback) {\n        console.log(\"--- 发牌动画！\");\n\n        let windowSize = cc.view.getVisibleSize();\n        var pos = centerNode.convertToWorldSpace(cc.p(0, 0))\n        pos = this.cardNode.convertToNodeSpace(pos);\n\n        this.cardNode.active = true;\n\n        for (let index = 0; index < 5; index++) {\n\n            this.cardList[index].setPosition(pos);\n            this.cardList[index].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames['back_2'];\n\n            var delay = cc.delayTime(index * 0.05);\n            var move = cc.moveTo(0.2, this.cardPosList[index]);\n            var seq = cc.sequence(delay, move);\n\n            if (index == 4 && this.isMySelf) {\n                var $this = this;\n                var cf_openCard = cc.callFunc(function () {\n                    $this.open4Card(cardData);\n                })\n                seq = cc.sequence(delay, move, cf_openCard);\n            }\n            this.cardList[index].runAction(seq);\n        }\n\n        var node = new cc.Node('myNode')\n        const sprite = node.addComponent(cc.Sprite)\n        sprite.spriteFrame = this.sf_cardBg;\n        node.setPosition(pos);\n        this.cardNode.addChild(node)\n\n\n        if (pCallback) {\n            pCallback()\n        };\n    },\n\n    /**\n     * 打开四张牌\n     * @param {*} cardData \n     */\n    open4Card(cardData) {\n        var $this = this;\n        for (let index = 0; index < 4; index++) {\n            var scale1 = cc.scaleBy(0.5, 0.1, 1);\n            var scale2 = cc.scaleBy(0.5, 10, 1);\n            var cf_setTexture = cc.callFunc(function () {\n                if (sf_cardList) {\n                    $this.cardList[index].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames[cardData[index]];\n                }\n\n            })\n            var seq = cc.sequence(scale1, cf_setTexture, scale2);\n\n            this.cardList[index].runAction(seq);\n        }\n\n    },\n\n    // 最后一张牌，开牌\n    openLastCard(cardData, lastCard, cardType) {\n        var $this = this;\n        var cf_showResult = cc.callFunc(function () {\n\n            for (let index = 0; index < 5; index++) {\n                var moveTo = cc.moveTo(0.4, $this.cardPosList[0])\n                var setSF = cc.callFunc(function () {\n                    $this.cardList[index].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames[cardData[index]];\n                });\n                var moveTo1 = cc.moveTo(0.4, $this.cardPosList[index]);\n                var seq = cc.sequence(moveTo, setSF, moveTo1);\n                $this.cardList[index].runAction(seq);\n            }\n        });\n\n        var scale1 = cc.scaleBy(0.4, 0.1, 1);\n        var scale2 = cc.scaleBy(0.4, 10, 1);\n        var delay = cc.delayTime(0.5);\n        var cf_setTexture = cc.callFunc(function () {\n            if (sf_cardList) {\n                $this.cardList[4].getComponent(\"cc.Sprite\").spriteFrame = sf_cardList._spriteFrames[lastCard];\n            }\n        })\n        var seq = cc.sequence(scale1, cf_setTexture, scale2, delay, cf_showResult);\n        this.cardList[4].runAction(seq);\n    },\n\n\n\n});\n"]}